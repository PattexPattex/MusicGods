plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group 'com.pattexpattex'
version '0.2.3'

String mainClass = 'com.pattexpattex.musicgods.Launcher'

sourceCompatibility = 17
targetCompatibility = 17

repositories {
    mavenCentral()

    maven { url 'https://jitpack.io' }
    maven { url 'https://m2.chew.pro/snapshots' }
    maven { url 'https://m2.dv8tion.net/releases' }

    jcenter()

    flatDir {
        dirs 'lib'
    }
}

dependencies {
    implementation 'net.dv8tion:JDA:5.0.0-beta.2' //JDA
    implementation 'ch.qos.logback:logback-classic:1.4.5' //Logging
    implementation 'org.json:json:20220924' //org.json for config

    implementation('com.sedmelluq:jda-nas:1.1.0') { //Native audio send UDP queue
        exclude module: 'udp-queue'
    }
    implementation 'club.minnced:udpqueue-native-win-x86-64:0.2.6'

    implementation 'com.github.walkyst:lavaplayer-fork:1.3.99.2' //Lavaplayer
    implementation files('lib/lavadsp-0.7.7.jar') //Lavaplayer audio filters
    implementation files('lib/native-loader-0.7.0.jar')
    implementation 'se.michaelthelin.spotify:spotify-web-api-java:7.3.0' //Spotify web API wrapper
    implementation 'com.jagrosh:JLyrics:0.6' //JLyrics
    implementation 'com.typesafe:config:1.4.2' //Typesafe (dependency of JLyrics)
    implementation 'org.jsoup:jsoup:1.15.3'
    implementation 'com.sapher:youtubedl:1.1' //YoutubeDL wrapper

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0' //Junit
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'

    compileOnly 'com.google.code.findbugs:jsr305:3.0.2' // javax.annotations
    runtimeOnly 'org.jetbrains.kotlin:kotlin-scripting-jsr223:1.8.0' // Kotlin DSL
}

jar.manifest.attributes(
        'Main-Class': mainClass,
        'Implementation-Version': project.version,
        'Implementation-Title': project.name,
        'Implementation-Vendor-Id': project.group
)

application.mainClass.set(mainClass)
shadowJar.archiveFileName = "${project.name}-${project.version}.jar"

javadoc.options.encoding('utf-8')
compileJava.options.encoding('utf-8')
compileTestJava.options.encoding('utf-8')

compileJava.options.compilerArgs << '-parameters'

test.useJUnitPlatform()

distTar.dependsOn(shadowJar)
distZip.dependsOn(shadowJar)
startScripts.dependsOn(shadowJar)
startShadowScripts.dependsOn(jar)
shadowDistTar.dependsOn(jar)
shadowDistZip.dependsOn(jar)
