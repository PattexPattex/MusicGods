plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group 'com.pattexpattex'
version '0.1.3'

sourceCompatibility = 17
targetCompatibility = 17

repositories {
    mavenCentral()

    maven { url 'https://jitpack.io' }
    maven { url 'https://m2.chew.pro/snapshots' }
    maven { url 'https://m2.dv8tion.net/releases' }

    jcenter()

    flatDir {
        dirs 'lib'
    }
}

dependencies {
    implementation 'net.dv8tion:JDA:5.0.0-alpha.13' //JDA
    implementation 'ch.qos.logback:logback-classic:1.2.11' //Logging
    implementation 'org.json:json:20220320' //org.json for config

    implementation 'com.sedmelluq:jda-nas:1.1.0' //JDA audio send subsystem
    implementation 'com.github.walkyst:lavaplayer-fork:1.3.97.1' //Lavaplayer
    implementation 'se.michaelthelin.spotify:spotify-web-api-java:7.1.0' //Spotify web API wrapper
    implementation 'com.jagrosh:JLyrics:0.5' //JLyrics
    implementation 'com.typesafe:config:1.4.2' //Typesafe (dependency of JLyrics)
    implementation 'com.sapher:youtubedl:1.1' //YoutubeDL wrapper
    implementation 'ch.obermuhlner:java-scriptengine:2.0.0' //Java script engine

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2' //Junit
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

jar {
    manifest {
        attributes('Main-Class': 'com.pattexpattex.musicgods.Bot')
        attributes('Implementation-Version': project.version)
        attributes('Implementation-Title': project.name)
        attributes('Implementation-Vendor-Id': project.group)
    }
}

application {
    mainClass.set('com.pattexpattex.musicgods.Bot')
}

javadoc {
    options.encoding 'utf-8'
}

compileJava {
    options.compilerArgs << '-parameters'
    options.encoding 'utf-8'
}

compileTestJava {
    options.encoding 'utf-8'
}

test {
    useJUnitPlatform()
}