plugins {
    id 'java'
    id 'application'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group 'com.pattexpattex'
version '0.2.8'

String mainClass = 'com.pattexpattex.musicgods.Launcher'
int javaVersion = 17

repositories {
    mavenCentral()
    jcenter()

    maven { url 'https://jitpack.io' }
    maven { url 'https://m2.chew.pro/snapshots' }
    maven { url 'https://m2.dv8tion.net/releases' }
}

dependencies {
    implementation 'net.dv8tion:JDA:5.0.0-beta.13' //JDA
    implementation 'ch.qos.logback:logback-classic:1.4.11' //Logging
    implementation 'org.json:json:20230618' //org.json for config

    implementation ('com.sedmelluq:jda-nas:1.1.0') { //Native UDP queue
        exclude module: 'udp-queue'
    }
    implementation "club.minnced:udpqueue-native-linux-x86-64:0.2.7"
    implementation "club.minnced:udpqueue-native-linux-x86:0.2.7"
    implementation "club.minnced:udpqueue-native-linux-aarch64:0.2.7"
    implementation "club.minnced:udpqueue-native-linux-arm:0.2.7"
    implementation "club.minnced:udpqueue-native-win-x86-64:0.2.7"
    implementation "club.minnced:udpqueue-native-win-x86:0.2.7"
    implementation "club.minnced:udpqueue-native-darwin:0.2.7"

    implementation 'dev.arbjerg:lavaplayer:2.0.1' //Lavaplayer
    implementation 'com.github.natanbc:lavadsp:0.7.7' // Lavadsp
    implementation 'com.github.natanbc:native-loader:0.7.0' // Native library loader
    implementation 'se.michaelthelin.spotify:spotify-web-api-java:8.0.0' //Spotify web API wrapper
    implementation 'com.github.PattexPattex:JLyrics:fix-newline-SNAPSHOT' //JLyrics
    implementation 'com.github.sapher:youtubedl-java:master-SNAPSHOT' //YoutubeDL

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3' //Junit
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.3'

    compileOnly 'com.google.code.findbugs:jsr305:3.0.2' // javax.annotations
    runtimeOnly 'org.jetbrains.kotlin:kotlin-scripting-jsr223:1.9.10' // Kotlin DSL
}

publishing.publications {
    maven(MavenPublication) {
        from components.java
    }
}

jar.manifest.attributes(
        'Main-Class': mainClass,
        'Implementation-Version': project.version,
        'Implementation-Title': project.name,
        'Implementation-Vendor-Id': project.group
)

application.mainClass.set(mainClass)
compileJava.options.compilerArgs << '-parameters'
shadowJar.archiveFileName = "${project.name}-${project.version}.jar"

javadoc.options.encoding('utf-8')
compileJava.options.encoding('utf-8')
compileTestJava.options.encoding('utf-8')

distTar.dependsOn(shadowJar)
distZip.dependsOn(shadowJar)
startScripts.dependsOn(shadowJar)
startShadowScripts.dependsOn(jar)
shadowDistTar.dependsOn(jar)
shadowDistZip.dependsOn(jar)

test.useJUnitPlatform()

java.toolchain.languageVersion.set(JavaLanguageVersion.of(javaVersion))
